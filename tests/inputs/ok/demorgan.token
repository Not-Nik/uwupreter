Ok(KwBool): "bool"
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(KwBool): "bool"
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(LBrace): "{"
Ok(KwIf): "if"
Ok(LParen): "("
Ok(Ident("b")): "b"
Ok(Eq): "=="
Ok(BoolLiteral(true)): "true"
Ok(RParen): ")"
Ok(KwReturn): "return"
Ok(BoolLiteral(false)): "false"
Ok(Semicolon): ";"
Ok(KwElse): "else"
Ok(KwReturn): "return"
Ok(BoolLiteral(true)): "true"
Ok(Semicolon): ";"
Ok(RBrace): "}"
Ok(KwBool): "bool"
Ok(Ident("morgan11")): "morgan11"
Ok(LParen): "("
Ok(KwBool): "bool"
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(KwBool): "bool"
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(LBrace): "{"
Ok(KwReturn): "return"
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(LogOr): "||"
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(RBrace): "}"
Ok(KwBool): "bool"
Ok(Ident("morgan12")): "morgan12"
Ok(LParen): "("
Ok(KwBool): "bool"
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(KwBool): "bool"
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(LBrace): "{"
Ok(KwReturn): "return"
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(RParen): ")"
Ok(LogAnd): "&&"
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(RBrace): "}"
Ok(KwBool): "bool"
Ok(Ident("morgan21")): "morgan21"
Ok(LParen): "("
Ok(KwBool): "bool"
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(KwBool): "bool"
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(LBrace): "{"
Ok(KwReturn): "return"
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(LogAnd): "&&"
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(RBrace): "}"
Ok(KwBool): "bool"
Ok(Ident("morgan22")): "morgan22"
Ok(LParen): "("
Ok(KwBool): "bool"
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(KwBool): "bool"
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(LBrace): "{"
Ok(KwReturn): "return"
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(RParen): ")"
Ok(LogOr): "||"
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(RBrace): "}"
Ok(KwVoid): "void"
Ok(Ident("main")): "main"
Ok(LParen): "("
Ok(RParen): ")"
Ok(LBrace): "{"
Ok(KwBool): "bool"
Ok(Ident("a")): "a"
Ok(Assign): "="
Ok(BoolLiteral(true)): "true"
Ok(Semicolon): ";"
Ok(KwBool): "bool"
Ok(Ident("b")): "b"
Ok(Assign): "="
Ok(BoolLiteral(true)): "true"
Ok(Semicolon): ";"
Ok(KwInt): "int"
Ok(Ident("i")): "i"
Ok(Assign): "="
Ok(IntLiteral(0)): "0"
Ok(Semicolon): ";"
Ok(KwPrint): "print"
Ok(LParen): "("
Ok(StringLiteral("Testing deMorgans Law")): "\"Testing deMorgans Law\""
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(KwDo): "do"
Ok(LBrace): "{"
Ok(KwDo): "do"
Ok(LBrace): "{"
Ok(KwPrint): "print"
Ok(LParen): "("
Ok(Ident("i")): "i"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(KwPrint): "print"
Ok(LParen): "("
Ok(Ident("morgan11")): "morgan11"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(KwPrint): "print"
Ok(LParen): "("
Ok(Ident("morgan12")): "morgan12"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(KwPrint): "print"
Ok(LParen): "("
Ok(Ident("morgan21")): "morgan21"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(KwPrint): "print"
Ok(LParen): "("
Ok(Ident("morgan22")): "morgan22"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(Comma): ","
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(Ident("i")): "i"
Ok(Assign): "="
Ok(Ident("i")): "i"
Ok(Add): "+"
Ok(IntLiteral(1)): "1"
Ok(Semicolon): ";"
Ok(Ident("b")): "b"
Ok(Assign): "="
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("b")): "b"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(RBrace): "}"
Ok(KwWhile): "while"
Ok(LParen): "("
Ok(Ident("b")): "b"
Ok(Neq): "!="
Ok(BoolLiteral(true)): "true"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(Ident("a")): "a"
Ok(Assign): "="
Ok(Ident("not")): "not"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(RBrace): "}"
Ok(KwWhile): "while"
Ok(LParen): "("
Ok(Ident("a")): "a"
Ok(Neq): "!="
Ok(BoolLiteral(true)): "true"
Ok(RParen): ")"
Ok(Semicolon): ";"
Ok(RBrace): "}"
