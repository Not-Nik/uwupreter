Program {
    items: [
        GlobalVar(
            VarDef {
                data_type: Int,
                res_ident: ResIdent {
                    ident: Ident(
                        "RANDSEED",
                    ),
                    res: Some(
                        DefId(
                            0,
                        ),
                    ),
                },
                init: Some(
                    Literal(
                        Int(
                            5001,
                        ),
                    ),
                ),
            },
        ),
        GlobalVar(
            VarDef {
                data_type: Int,
                res_ident: ResIdent {
                    ident: Ident(
                        "MAX_INT",
                    ),
                    res: Some(
                        DefId(
                            1,
                        ),
                    ),
                },
                init: Some(
                    Literal(
                        Int(
                            2147483647,
                        ),
                    ),
                ),
            },
        ),
        GlobalVar(
            VarDef {
                data_type: Int,
                res_ident: ResIdent {
                    ident: Ident(
                        "MIN_INT",
                    ),
                    res: Some(
                        DefId(
                            2,
                        ),
                    ),
                },
                init: Some(
                    BinaryOp(
                        BinOpExpr {
                            op: Sub,
                            lhs: UnaryMinus(
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "MAX_INT",
                                        ),
                                        res: Some(
                                            DefId(
                                                1,
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            rhs: Literal(
                                Int(
                                    1,
                                ),
                            ),
                        },
                    ),
                ),
            },
        ),
        GlobalVar(
            VarDef {
                data_type: Float,
                res_ident: ResIdent {
                    ident: Ident(
                        "PI",
                    ),
                    res: Some(
                        DefId(
                            3,
                        ),
                    ),
                },
                init: Some(
                    Literal(
                        Float(
                            3.1415926,
                        ),
                    ),
                ),
            },
        ),
        Func(
            FuncDef {
                return_type: Int,
                ident: Ident(
                    "factorial",
                ),
                params: [
                    FuncParam {
                        data_type: Int,
                        ident: Ident(
                            "n",
                        ),
                    },
                ],
                statements: [
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: LogAnd,
                                    lhs: BinaryOp(
                                        BinOpExpr {
                                            op: Leq,
                                            lhs: Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "n",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            5,
                                                        ),
                                                    ),
                                                },
                                            ),
                                            rhs: Literal(
                                                Int(
                                                    1,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: BinaryOp(
                                        BinOpExpr {
                                            op: Gt,
                                            lhs: Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "n",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            5,
                                                        ),
                                                    ),
                                                },
                                            ),
                                            rhs: UnaryMinus(
                                                Literal(
                                                    Int(
                                                        1,
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Return(
                                            Some(
                                                Literal(
                                                    Int(
                                                        1,
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Lt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "n",
                                            ),
                                            res: Some(
                                                DefId(
                                                    5,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Int(
                                            0,
                                        ),
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Return(
                                            Some(
                                                UnaryMinus(
                                                    Literal(
                                                        Int(
                                                            1,
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    Return(
                        Some(
                            BinaryOp(
                                BinOpExpr {
                                    op: Mul,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "n",
                                            ),
                                            res: Some(
                                                DefId(
                                                    5,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Call(
                                        FuncCall {
                                            res_ident: ResIdent {
                                                ident: Ident(
                                                    "factorial",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        4,
                                                    ),
                                                ),
                                            },
                                            args: [
                                                BinaryOp(
                                                    BinOpExpr {
                                                        op: Sub,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "n",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        5,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Literal(
                                                            Int(
                                                                1,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "abs",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "val",
                        ),
                    },
                ],
                statements: [
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Gt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "val",
                                            ),
                                            res: Some(
                                                DefId(
                                                    7,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Int(
                                            0,
                                        ),
                                    ),
                                },
                            ),
                            if_true: Return(
                                Some(
                                    Var(
                                        ResIdent {
                                            ident: Ident(
                                                "val",
                                            ),
                                            res: Some(
                                                DefId(
                                                    7,
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            if_false: None,
                        },
                    ),
                    Return(
                        Some(
                            UnaryMinus(
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "val",
                                        ),
                                        res: Some(
                                            DefId(
                                                7,
                                            ),
                                        ),
                                    },
                                ),
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "exp",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                ],
                statements: [
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "ratio",
                                ),
                                res: Some(
                                    DefId(
                                        10,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        1,
                                    ),
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "result",
                                ),
                                res: Some(
                                    DefId(
                                        11,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        1,
                                    ),
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "resultOld",
                                ),
                                res: Some(
                                    DefId(
                                        12,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        0,
                                    ),
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Int,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "n",
                                ),
                                res: Some(
                                    DefId(
                                        13,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        0,
                                    ),
                                ),
                            ),
                        },
                    ),
                    While(
                        WhileStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Gt,
                                    lhs: Call(
                                        FuncCall {
                                            res_ident: ResIdent {
                                                ident: Ident(
                                                    "abs",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        6,
                                                    ),
                                                ),
                                            },
                                            args: [
                                                BinaryOp(
                                                    BinOpExpr {
                                                        op: Sub,
                                                        lhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Div,
                                                                lhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "result",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                11,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "resultOld",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                12,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Literal(
                                                            Int(
                                                                1,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                    rhs: Literal(
                                        Float(
                                            1e-5,
                                        ),
                                    ),
                                },
                            ),
                            body: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "n",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            13,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Add,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "n",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        13,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Literal(
                                                            Int(
                                                                1,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "resultOld",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            12,
                                                        ),
                                                    ),
                                                },
                                                rhs: Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "result",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                11,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "ratio",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            10,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Div,
                                                        lhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Mul,
                                                                lhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "ratio",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                10,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "x",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                9,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "n",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        13,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "result",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            11,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Add,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "result",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        11,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "ratio",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        10,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        },
                    ),
                    Return(
                        Some(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "result",
                                    ),
                                    res: Some(
                                        DefId(
                                            11,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "ln",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                ],
                statements: [
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Lt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    15,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Float(
                                            0.5,
                                        ),
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Return(
                                            Some(
                                                Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "x",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                15,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Int,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "j",
                                ),
                                res: Some(
                                    DefId(
                                        16,
                                    ),
                                ),
                            },
                            init: None,
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "sum",
                                ),
                                res: Some(
                                    DefId(
                                        17,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Float(
                                        0.0,
                                    ),
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "oldSum",
                                ),
                                res: Some(
                                    DefId(
                                        18,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        1,
                                    ),
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "power",
                                ),
                                res: Some(
                                    DefId(
                                        19,
                                    ),
                                ),
                            },
                            init: None,
                        },
                    ),
                    For(
                        ForStmt {
                            init: VarDef(
                                VarDef {
                                    data_type: Int,
                                    res_ident: ResIdent {
                                        ident: Ident(
                                            "i",
                                        ),
                                        res: Some(
                                            DefId(
                                                20,
                                            ),
                                        ),
                                    },
                                    init: Some(
                                        Literal(
                                            Int(
                                                1,
                                            ),
                                        ),
                                    ),
                                },
                            ),
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Gt,
                                    lhs: Call(
                                        FuncCall {
                                            res_ident: ResIdent {
                                                ident: Ident(
                                                    "abs",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        6,
                                                    ),
                                                ),
                                            },
                                            args: [
                                                BinaryOp(
                                                    BinOpExpr {
                                                        op: Sub,
                                                        lhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Div,
                                                                lhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "sum",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                17,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "oldSum",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                18,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Literal(
                                                            Int(
                                                                1,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                    rhs: Literal(
                                        Float(
                                            1e-5,
                                        ),
                                    ),
                                },
                            ),
                            update: Assign {
                                lhs: ResIdent {
                                    ident: Ident(
                                        "i",
                                    ),
                                    res: Some(
                                        DefId(
                                            20,
                                        ),
                                    ),
                                },
                                rhs: BinaryOp(
                                    BinOpExpr {
                                        op: Add,
                                        lhs: Var(
                                            ResIdent {
                                                ident: Ident(
                                                    "i",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        20,
                                                    ),
                                                ),
                                            },
                                        ),
                                        rhs: Literal(
                                            Int(
                                                1,
                                            ),
                                        ),
                                    },
                                ),
                            },
                            body: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "oldSum",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            18,
                                                        ),
                                                    ),
                                                },
                                                rhs: Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "sum",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                17,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "power",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            19,
                                                        ),
                                                    ),
                                                },
                                                rhs: Literal(
                                                    Float(
                                                        1.0,
                                                    ),
                                                ),
                                            },
                                        ),
                                        For(
                                            ForStmt {
                                                init: VarDef(
                                                    VarDef {
                                                        data_type: Int,
                                                        res_ident: ResIdent {
                                                            ident: Ident(
                                                                "j",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    21,
                                                                ),
                                                            ),
                                                        },
                                                        init: Some(
                                                            Literal(
                                                                Int(
                                                                    0,
                                                                ),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                                cond: BinaryOp(
                                                    BinOpExpr {
                                                        op: Lt,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "j",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        21,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "i",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        20,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                update: Assign {
                                                    lhs: ResIdent {
                                                        ident: Ident(
                                                            "j",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                21,
                                                            ),
                                                        ),
                                                    },
                                                    rhs: BinaryOp(
                                                        BinOpExpr {
                                                            op: Add,
                                                            lhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "j",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            21,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Literal(
                                                                Int(
                                                                    1,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                                body: Block(
                                                    Block {
                                                        statements: [
                                                            Assign(
                                                                Assign {
                                                                    lhs: ResIdent {
                                                                        ident: Ident(
                                                                            "power",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                19,
                                                                            ),
                                                                        ),
                                                                    },
                                                                    rhs: BinaryOp(
                                                                        BinOpExpr {
                                                                            op: Mul,
                                                                            lhs: Var(
                                                                                ResIdent {
                                                                                    ident: Ident(
                                                                                        "power",
                                                                                    ),
                                                                                    res: Some(
                                                                                        DefId(
                                                                                            19,
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            rhs: BinaryOp(
                                                                                BinOpExpr {
                                                                                    op: Div,
                                                                                    lhs: BinaryOp(
                                                                                        BinOpExpr {
                                                                                            op: Sub,
                                                                                            lhs: Var(
                                                                                                ResIdent {
                                                                                                    ident: Ident(
                                                                                                        "x",
                                                                                                    ),
                                                                                                    res: Some(
                                                                                                        DefId(
                                                                                                            15,
                                                                                                        ),
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            rhs: Literal(
                                                                                                Float(
                                                                                                    1.0,
                                                                                                ),
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    rhs: Var(
                                                                                        ResIdent {
                                                                                            ident: Ident(
                                                                                                "x",
                                                                                            ),
                                                                                            res: Some(
                                                                                                DefId(
                                                                                                    15,
                                                                                                ),
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "sum",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            17,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Add,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "sum",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        17,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Mul,
                                                                lhs: BinaryOp(
                                                                    BinOpExpr {
                                                                        op: Div,
                                                                        lhs: Literal(
                                                                            Float(
                                                                                1.0,
                                                                            ),
                                                                        ),
                                                                        rhs: Var(
                                                                            ResIdent {
                                                                                ident: Ident(
                                                                                    "i",
                                                                                ),
                                                                                res: Some(
                                                                                    DefId(
                                                                                        20,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "power",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                19,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        },
                    ),
                    Return(
                        Some(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "sum",
                                    ),
                                    res: Some(
                                        DefId(
                                            17,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "log",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "b",
                        ),
                    },
                ],
                statements: [
                    Return(
                        Some(
                            BinaryOp(
                                BinOpExpr {
                                    op: Div,
                                    lhs: Call(
                                        FuncCall {
                                            res_ident: ResIdent {
                                                ident: Ident(
                                                    "ln",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        14,
                                                    ),
                                                ),
                                            },
                                            args: [
                                                Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "x",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                23,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                    rhs: Call(
                                        FuncCall {
                                            res_ident: ResIdent {
                                                ident: Ident(
                                                    "ln",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        14,
                                                    ),
                                                ),
                                            },
                                            args: [
                                                Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "b",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                24,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "pow",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "n",
                        ),
                    },
                ],
                statements: [
                    Return(
                        Some(
                            Call(
                                FuncCall {
                                    res_ident: ResIdent {
                                        ident: Ident(
                                            "exp",
                                        ),
                                        res: Some(
                                            DefId(
                                                8,
                                            ),
                                        ),
                                    },
                                    args: [
                                        BinaryOp(
                                            BinOpExpr {
                                                op: Mul,
                                                lhs: Call(
                                                    FuncCall {
                                                        res_ident: ResIdent {
                                                            ident: Ident(
                                                                "ln",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    14,
                                                                ),
                                                            ),
                                                        },
                                                        args: [
                                                            Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "x",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            26,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                rhs: Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "n",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                27,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "sqrt",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                ],
                statements: [
                    Return(
                        Some(
                            Call(
                                FuncCall {
                                    res_ident: ResIdent {
                                        ident: Ident(
                                            "exp",
                                        ),
                                        res: Some(
                                            DefId(
                                                8,
                                            ),
                                        ),
                                    },
                                    args: [
                                        BinaryOp(
                                            BinOpExpr {
                                                op: Mul,
                                                lhs: Call(
                                                    FuncCall {
                                                        res_ident: ResIdent {
                                                            ident: Ident(
                                                                "ln",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    14,
                                                                ),
                                                            ),
                                                        },
                                                        args: [
                                                            Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "x",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            29,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                rhs: Literal(
                                                    Float(
                                                        0.5,
                                                    ),
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "power",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                    FuncParam {
                        data_type: Int,
                        ident: Ident(
                            "n",
                        ),
                    },
                ],
                statements: [
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Lt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "n",
                                            ),
                                            res: Some(
                                                DefId(
                                                    32,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Int(
                                            0,
                                        ),
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Return(
                                            Some(
                                                UnaryMinus(
                                                    Literal(
                                                        Int(
                                                            1,
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "result",
                                ),
                                res: Some(
                                    DefId(
                                        33,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        1,
                                    ),
                                ),
                            ),
                        },
                    ),
                    For(
                        ForStmt {
                            init: VarDef(
                                VarDef {
                                    data_type: Int,
                                    res_ident: ResIdent {
                                        ident: Ident(
                                            "i",
                                        ),
                                        res: Some(
                                            DefId(
                                                34,
                                            ),
                                        ),
                                    },
                                    init: Some(
                                        Literal(
                                            Int(
                                                0,
                                            ),
                                        ),
                                    ),
                                },
                            ),
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Lt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "i",
                                            ),
                                            res: Some(
                                                DefId(
                                                    34,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "n",
                                            ),
                                            res: Some(
                                                DefId(
                                                    32,
                                                ),
                                            ),
                                        },
                                    ),
                                },
                            ),
                            update: Assign {
                                lhs: ResIdent {
                                    ident: Ident(
                                        "i",
                                    ),
                                    res: Some(
                                        DefId(
                                            34,
                                        ),
                                    ),
                                },
                                rhs: BinaryOp(
                                    BinOpExpr {
                                        op: Add,
                                        lhs: Var(
                                            ResIdent {
                                                ident: Ident(
                                                    "i",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        34,
                                                    ),
                                                ),
                                            },
                                        ),
                                        rhs: Literal(
                                            Int(
                                                1,
                                            ),
                                        ),
                                    },
                                ),
                            },
                            body: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "result",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            33,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Mul,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "result",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        33,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "x",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        31,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        },
                    ),
                    Return(
                        Some(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "result",
                                    ),
                                    res: Some(
                                        DefId(
                                            33,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "sin",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                ],
                statements: [
                    While(
                        WhileStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Geq,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    36,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: BinaryOp(
                                        BinOpExpr {
                                            op: Mul,
                                            lhs: Literal(
                                                Int(
                                                    2,
                                                ),
                                            ),
                                            rhs: Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "PI",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            3,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                            body: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "x",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            36,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Sub,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "x",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        36,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Mul,
                                                                lhs: Literal(
                                                                    Int(
                                                                        2,
                                                                    ),
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "PI",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                3,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        },
                    ),
                    While(
                        WhileStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Lt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    36,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Int(
                                            0,
                                        ),
                                    ),
                                },
                            ),
                            body: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "x",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            36,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Add,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "x",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        36,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Mul,
                                                                lhs: Literal(
                                                                    Int(
                                                                        2,
                                                                    ),
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "PI",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                3,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Int,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "correction",
                                ),
                                res: Some(
                                    DefId(
                                        37,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        1,
                                    ),
                                ),
                            ),
                        },
                    ),
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Gt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    36,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "PI",
                                            ),
                                            res: Some(
                                                DefId(
                                                    3,
                                                ),
                                            ),
                                        },
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "x",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            36,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Sub,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "x",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        36,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "PI",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        3,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "correction",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            37,
                                                        ),
                                                    ),
                                                },
                                                rhs: UnaryMinus(
                                                    Literal(
                                                        Int(
                                                            1,
                                                        ),
                                                    ),
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Geq,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    36,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: BinaryOp(
                                        BinOpExpr {
                                            op: Div,
                                            lhs: Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "PI",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            3,
                                                        ),
                                                    ),
                                                },
                                            ),
                                            rhs: Literal(
                                                Float(
                                                    2.0,
                                                ),
                                            ),
                                        },
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "x",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            36,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Sub,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "PI",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        3,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "x",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        36,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "result",
                                ),
                                res: Some(
                                    DefId(
                                        38,
                                    ),
                                ),
                            },
                            init: Some(
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "x",
                                        ),
                                        res: Some(
                                            DefId(
                                                36,
                                            ),
                                        ),
                                    },
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "oldResult",
                                ),
                                res: Some(
                                    DefId(
                                        39,
                                    ),
                                ),
                            },
                            init: Some(
                                BinaryOp(
                                    BinOpExpr {
                                        op: Mul,
                                        lhs: UnaryMinus(
                                            Literal(
                                                Int(
                                                    3,
                                                ),
                                            ),
                                        ),
                                        rhs: Var(
                                            ResIdent {
                                                ident: Ident(
                                                    "PI",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        3,
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "ratio",
                                ),
                                res: Some(
                                    DefId(
                                        40,
                                    ),
                                ),
                            },
                            init: Some(
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "x",
                                        ),
                                        res: Some(
                                            DefId(
                                                36,
                                            ),
                                        ),
                                    },
                                ),
                            ),
                        },
                    ),
                    For(
                        ForStmt {
                            init: VarDef(
                                VarDef {
                                    data_type: Int,
                                    res_ident: ResIdent {
                                        ident: Ident(
                                            "i",
                                        ),
                                        res: Some(
                                            DefId(
                                                41,
                                            ),
                                        ),
                                    },
                                    init: Some(
                                        Literal(
                                            Int(
                                                3,
                                            ),
                                        ),
                                    ),
                                },
                            ),
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Gt,
                                    lhs: Call(
                                        FuncCall {
                                            res_ident: ResIdent {
                                                ident: Ident(
                                                    "abs",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        6,
                                                    ),
                                                ),
                                            },
                                            args: [
                                                BinaryOp(
                                                    BinOpExpr {
                                                        op: Sub,
                                                        lhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Div,
                                                                lhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "result",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                38,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "oldResult",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                39,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Literal(
                                                            Int(
                                                                1,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                    rhs: Literal(
                                        Float(
                                            1e-5,
                                        ),
                                    ),
                                },
                            ),
                            update: Assign {
                                lhs: ResIdent {
                                    ident: Ident(
                                        "i",
                                    ),
                                    res: Some(
                                        DefId(
                                            41,
                                        ),
                                    ),
                                },
                                rhs: BinaryOp(
                                    BinOpExpr {
                                        op: Add,
                                        lhs: Var(
                                            ResIdent {
                                                ident: Ident(
                                                    "i",
                                                ),
                                                res: Some(
                                                    DefId(
                                                        41,
                                                    ),
                                                ),
                                            },
                                        ),
                                        rhs: Literal(
                                            Int(
                                                2,
                                            ),
                                        ),
                                    },
                                ),
                            },
                            body: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "oldResult",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            39,
                                                        ),
                                                    ),
                                                },
                                                rhs: Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "result",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                38,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "ratio",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            40,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Div,
                                                        lhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Mul,
                                                                lhs: BinaryOp(
                                                                    BinOpExpr {
                                                                        op: Mul,
                                                                        lhs: UnaryMinus(
                                                                            Var(
                                                                                ResIdent {
                                                                                    ident: Ident(
                                                                                        "ratio",
                                                                                    ),
                                                                                    res: Some(
                                                                                        DefId(
                                                                                            40,
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                        rhs: Var(
                                                                            ResIdent {
                                                                                ident: Ident(
                                                                                    "x",
                                                                                ),
                                                                                res: Some(
                                                                                    DefId(
                                                                                        36,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "x",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                36,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: BinaryOp(
                                                            BinOpExpr {
                                                                op: Mul,
                                                                lhs: Var(
                                                                    ResIdent {
                                                                        ident: Ident(
                                                                            "i",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                41,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: BinaryOp(
                                                                    BinOpExpr {
                                                                        op: Sub,
                                                                        lhs: Var(
                                                                            ResIdent {
                                                                                ident: Ident(
                                                                                    "i",
                                                                                ),
                                                                                res: Some(
                                                                                    DefId(
                                                                                        41,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                        rhs: Literal(
                                                                            Int(
                                                                                1,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "result",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            38,
                                                        ),
                                                    ),
                                                },
                                                rhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Add,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "result",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        38,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "ratio",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        40,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        },
                    ),
                    Return(
                        Some(
                            BinaryOp(
                                BinOpExpr {
                                    op: Mul,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "correction",
                                            ),
                                            res: Some(
                                                DefId(
                                                    37,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "result",
                                            ),
                                            res: Some(
                                                DefId(
                                                    38,
                                                ),
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "cos",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                ],
                statements: [
                    Return(
                        Some(
                            Call(
                                FuncCall {
                                    res_ident: ResIdent {
                                        ident: Ident(
                                            "sin",
                                        ),
                                        res: Some(
                                            DefId(
                                                35,
                                            ),
                                        ),
                                    },
                                    args: [
                                        BinaryOp(
                                            BinOpExpr {
                                                op: Sub,
                                                lhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Div,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "PI",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        3,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Literal(
                                                            Float(
                                                                2.0,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                                rhs: Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "x",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                43,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "tan",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                ],
                statements: [
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "cosine",
                                ),
                                res: Some(
                                    DefId(
                                        46,
                                    ),
                                ),
                            },
                            init: Some(
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "cos",
                                            ),
                                            res: Some(
                                                DefId(
                                                    42,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "x",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            45,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "sine",
                                ),
                                res: Some(
                                    DefId(
                                        47,
                                    ),
                                ),
                            },
                            init: Some(
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "sin",
                                            ),
                                            res: Some(
                                                DefId(
                                                    35,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "x",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            45,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ),
                        },
                    ),
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Neq,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "cosine",
                                            ),
                                            res: Some(
                                                DefId(
                                                    46,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Int(
                                            0,
                                        ),
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Return(
                                            Some(
                                                BinaryOp(
                                                    BinOpExpr {
                                                        op: Div,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "sine",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        47,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "cosine",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        46,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    Return(
                        Some(
                            UnaryMinus(
                                Literal(
                                    Int(
                                        1,
                                    ),
                                ),
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Int,
                ident: Ident(
                    "float2Int",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "x",
                        ),
                    },
                ],
                statements: [
                    VarDef(
                        VarDef {
                            data_type: Int,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "returnval",
                                ),
                                res: Some(
                                    DefId(
                                        50,
                                    ),
                                ),
                            },
                            init: None,
                        },
                    ),
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Gt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    49,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "MAX_INT",
                                            ),
                                            res: Some(
                                                DefId(
                                                    1,
                                                ),
                                            ),
                                        },
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Return(
                                            Some(
                                                Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "MAX_INT",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                1,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Lt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    49,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "MIN_INT",
                                            ),
                                            res: Some(
                                                DefId(
                                                    2,
                                                ),
                                            ),
                                        },
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Return(
                                            Some(
                                                Var(
                                                    ResIdent {
                                                        ident: Ident(
                                                            "MIN_INT",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                2,
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            if_false: None,
                        },
                    ),
                    If(
                        IfStmt {
                            cond: BinaryOp(
                                BinOpExpr {
                                    op: Gt,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "x",
                                            ),
                                            res: Some(
                                                DefId(
                                                    49,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Int(
                                            0,
                                        ),
                                    ),
                                },
                            ),
                            if_true: Block(
                                Block {
                                    statements: [
                                        Assign(
                                            Assign {
                                                lhs: ResIdent {
                                                    ident: Ident(
                                                        "returnval",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            50,
                                                        ),
                                                    ),
                                                },
                                                rhs: Literal(
                                                    Int(
                                                        2,
                                                    ),
                                                ),
                                            },
                                        ),
                                        While(
                                            WhileStmt {
                                                cond: BinaryOp(
                                                    BinOpExpr {
                                                        op: Gt,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "x",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        49,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "returnval",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        50,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                body: Block(
                                                    Block {
                                                        statements: [
                                                            Assign(
                                                                Assign {
                                                                    lhs: ResIdent {
                                                                        ident: Ident(
                                                                            "returnval",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                50,
                                                                            ),
                                                                        ),
                                                                    },
                                                                    rhs: BinaryOp(
                                                                        BinOpExpr {
                                                                            op: Mul,
                                                                            lhs: Var(
                                                                                ResIdent {
                                                                                    ident: Ident(
                                                                                        "returnval",
                                                                                    ),
                                                                                    res: Some(
                                                                                        DefId(
                                                                                            50,
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            rhs: Literal(
                                                                                Int(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        While(
                                            WhileStmt {
                                                cond: BinaryOp(
                                                    BinOpExpr {
                                                        op: Lt,
                                                        lhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "x",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        49,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "returnval",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        50,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                body: Block(
                                                    Block {
                                                        statements: [
                                                            Assign(
                                                                Assign {
                                                                    lhs: ResIdent {
                                                                        ident: Ident(
                                                                            "returnval",
                                                                        ),
                                                                        res: Some(
                                                                            DefId(
                                                                                50,
                                                                            ),
                                                                        ),
                                                                    },
                                                                    rhs: BinaryOp(
                                                                        BinOpExpr {
                                                                            op: Sub,
                                                                            lhs: Var(
                                                                                ResIdent {
                                                                                    ident: Ident(
                                                                                        "returnval",
                                                                                    ),
                                                                                    res: Some(
                                                                                        DefId(
                                                                                            50,
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            rhs: Literal(
                                                                                Int(
                                                                                    1,
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                            if_false: Some(
                                Block(
                                    Block {
                                        statements: [
                                            Assign(
                                                Assign {
                                                    lhs: ResIdent {
                                                        ident: Ident(
                                                            "returnval",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                50,
                                                            ),
                                                        ),
                                                    },
                                                    rhs: UnaryMinus(
                                                        Literal(
                                                            Int(
                                                                2,
                                                            ),
                                                        ),
                                                    ),
                                                },
                                            ),
                                            While(
                                                WhileStmt {
                                                    cond: BinaryOp(
                                                        BinOpExpr {
                                                            op: Lt,
                                                            lhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "x",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            49,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "returnval",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            50,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    body: Block(
                                                        Block {
                                                            statements: [
                                                                Assign(
                                                                    Assign {
                                                                        lhs: ResIdent {
                                                                            ident: Ident(
                                                                                "returnval",
                                                                            ),
                                                                            res: Some(
                                                                                DefId(
                                                                                    50,
                                                                                ),
                                                                            ),
                                                                        },
                                                                        rhs: BinaryOp(
                                                                            BinOpExpr {
                                                                                op: Mul,
                                                                                lhs: Var(
                                                                                    ResIdent {
                                                                                        ident: Ident(
                                                                                            "returnval",
                                                                                        ),
                                                                                        res: Some(
                                                                                            DefId(
                                                                                                50,
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                rhs: Literal(
                                                                                    Int(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            While(
                                                WhileStmt {
                                                    cond: BinaryOp(
                                                        BinOpExpr {
                                                            op: Gt,
                                                            lhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "x",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            49,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "returnval",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            50,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    body: Block(
                                                        Block {
                                                            statements: [
                                                                Assign(
                                                                    Assign {
                                                                        lhs: ResIdent {
                                                                            ident: Ident(
                                                                                "returnval",
                                                                            ),
                                                                            res: Some(
                                                                                DefId(
                                                                                    50,
                                                                                ),
                                                                            ),
                                                                        },
                                                                        rhs: BinaryOp(
                                                                            BinOpExpr {
                                                                                op: Add,
                                                                                lhs: Var(
                                                                                    ResIdent {
                                                                                        ident: Ident(
                                                                                            "returnval",
                                                                                        ),
                                                                                        res: Some(
                                                                                            DefId(
                                                                                                50,
                                                                                            ),
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                rhs: Literal(
                                                                                    Int(
                                                                                        1,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ),
                        },
                    ),
                    Return(
                        Some(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "returnval",
                                    ),
                                    res: Some(
                                        DefId(
                                            50,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Int,
                ident: Ident(
                    "modulo",
                ),
                params: [
                    FuncParam {
                        data_type: Int,
                        ident: Ident(
                            "a",
                        ),
                    },
                    FuncParam {
                        data_type: Int,
                        ident: Ident(
                            "b",
                        ),
                    },
                ],
                statements: [
                    Return(
                        Some(
                            BinaryOp(
                                BinOpExpr {
                                    op: Sub,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "a",
                                            ),
                                            res: Some(
                                                DefId(
                                                    52,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: BinaryOp(
                                        BinOpExpr {
                                            op: Mul,
                                            lhs: BinaryOp(
                                                BinOpExpr {
                                                    op: Div,
                                                    lhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "a",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    52,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "b",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    53,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            rhs: Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "b",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            53,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Int,
                ident: Ident(
                    "rand",
                ),
                params: [],
                statements: [
                    Assign(
                        Assign {
                            lhs: ResIdent {
                                ident: Ident(
                                    "RANDSEED",
                                ),
                                res: Some(
                                    DefId(
                                        0,
                                    ),
                                ),
                            },
                            rhs: Call(
                                FuncCall {
                                    res_ident: ResIdent {
                                        ident: Ident(
                                            "modulo",
                                        ),
                                        res: Some(
                                            DefId(
                                                51,
                                            ),
                                        ),
                                    },
                                    args: [
                                        BinaryOp(
                                            BinOpExpr {
                                                op: Add,
                                                lhs: BinaryOp(
                                                    BinOpExpr {
                                                        op: Mul,
                                                        lhs: Literal(
                                                            Int(
                                                                13125,
                                                            ),
                                                        ),
                                                        rhs: Var(
                                                            ResIdent {
                                                                ident: Ident(
                                                                    "RANDSEED",
                                                                ),
                                                                res: Some(
                                                                    DefId(
                                                                        0,
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                rhs: Literal(
                                                    Int(
                                                        12345,
                                                    ),
                                                ),
                                            },
                                        ),
                                        Literal(
                                            Int(
                                                16384,
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        },
                    ),
                    Return(
                        Some(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "RANDSEED",
                                    ),
                                    res: Some(
                                        DefId(
                                            0,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Float,
                ident: Ident(
                    "random",
                ),
                params: [],
                statements: [
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "number",
                                ),
                                res: Some(
                                    DefId(
                                        56,
                                    ),
                                ),
                            },
                            init: Some(
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "rand",
                                            ),
                                            res: Some(
                                                DefId(
                                                    54,
                                                ),
                                            ),
                                        },
                                        args: [],
                                    },
                                ),
                            ),
                        },
                    ),
                    Return(
                        Some(
                            BinaryOp(
                                BinOpExpr {
                                    op: Div,
                                    lhs: Var(
                                        ResIdent {
                                            ident: Ident(
                                                "number",
                                            ),
                                            res: Some(
                                                DefId(
                                                    56,
                                                ),
                                            ),
                                        },
                                    ),
                                    rhs: Literal(
                                        Float(
                                            16384.0,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Void,
                ident: Ident(
                    "printResults",
                ),
                params: [
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "calculated",
                        ),
                    },
                    FuncParam {
                        data_type: Float,
                        ident: Ident(
                            "expected",
                        ),
                    },
                ],
                statements: [
                    Print(
                        String(
                            "Result:",
                        ),
                    ),
                    Print(
                        Expr(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "calculated",
                                    ),
                                    res: Some(
                                        DefId(
                                            58,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                    Print(
                        String(
                            "Expected:",
                        ),
                    ),
                    Print(
                        Expr(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "expected",
                                    ),
                                    res: Some(
                                        DefId(
                                            59,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Return(
                        None,
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Void,
                ident: Ident(
                    "printResultsI",
                ),
                params: [
                    FuncParam {
                        data_type: Int,
                        ident: Ident(
                            "calculated",
                        ),
                    },
                    FuncParam {
                        data_type: Int,
                        ident: Ident(
                            "expected",
                        ),
                    },
                ],
                statements: [
                    Print(
                        String(
                            "Result:",
                        ),
                    ),
                    Print(
                        Expr(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "calculated",
                                    ),
                                    res: Some(
                                        DefId(
                                            61,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                    Print(
                        String(
                            "Expected:",
                        ),
                    ),
                    Print(
                        Expr(
                            Var(
                                ResIdent {
                                    ident: Ident(
                                        "expected",
                                    ),
                                    res: Some(
                                        DefId(
                                            62,
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Return(
                        None,
                    ),
                ],
            },
        ),
        Func(
            FuncDef {
                return_type: Void,
                ident: Ident(
                    "main",
                ),
                params: [],
                statements: [
                    Print(
                        String(
                            "This is a small sample programm for tests in c1",
                        ),
                    ),
                    Print(
                        String(
                            "        ----(c) Dustin Hebecker----",
                        ),
                    ),
                    VarDef(
                        VarDef {
                            data_type: Int,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "aInt",
                                ),
                                res: Some(
                                    DefId(
                                        64,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Int(
                                        10,
                                    ),
                                ),
                            ),
                        },
                    ),
                    VarDef(
                        VarDef {
                            data_type: Float,
                            res_ident: ResIdent {
                                ident: Ident(
                                    "aFloat",
                                ),
                                res: Some(
                                    DefId(
                                        65,
                                    ),
                                ),
                            },
                            init: Some(
                                Literal(
                                    Float(
                                        54.3,
                                    ),
                                ),
                            ),
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Local Variable Int",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "aInt",
                                        ),
                                        res: Some(
                                            DefId(
                                                64,
                                            ),
                                        ),
                                    },
                                ),
                                Literal(
                                    Int(
                                        10,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Local Variable Float",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "aFloat",
                                        ),
                                        res: Some(
                                            DefId(
                                                65,
                                            ),
                                        ),
                                    },
                                ),
                                Literal(
                                    Float(
                                        54.3,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Global Variable Int",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "RANDSEED",
                                        ),
                                        res: Some(
                                            DefId(
                                                0,
                                            ),
                                        ),
                                    },
                                ),
                                Literal(
                                    Int(
                                        5001,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Global Variable Float",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "PI",
                                        ),
                                        res: Some(
                                            DefId(
                                                3,
                                            ),
                                        ),
                                    },
                                ),
                                Literal(
                                    Float(
                                        3.1415926,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Factorial Function (10!)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "factorial",
                                            ),
                                            res: Some(
                                                DefId(
                                                    4,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "aInt",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            64,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Int(
                                        3628800,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Absolute value (-13)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "float2Int",
                                            ),
                                            res: Some(
                                                DefId(
                                                    48,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Call(
                                                FuncCall {
                                                    res_ident: ResIdent {
                                                        ident: Ident(
                                                            "abs",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                6,
                                                            ),
                                                        ),
                                                    },
                                                    args: [
                                                        BinaryOp(
                                                            BinOpExpr {
                                                                op: Div,
                                                                lhs: BinaryOp(
                                                                    BinOpExpr {
                                                                        op: Mul,
                                                                        lhs: Var(
                                                                            ResIdent {
                                                                                ident: Ident(
                                                                                    "aInt",
                                                                                ),
                                                                                res: Some(
                                                                                    DefId(
                                                                                        64,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                        rhs: Literal(
                                                                            Int(
                                                                                13,
                                                                            ),
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: UnaryMinus(
                                                                    Literal(
                                                                        Float(
                                                                            10.0,
                                                                        ),
                                                                    ),
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Int(
                                        13,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "(e)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "exp",
                                            ),
                                            res: Some(
                                                DefId(
                                                    8,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Literal(
                                                Float(
                                                    1.0,
                                                ),
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        2.718281828,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "(e^PI)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "exp",
                                            ),
                                            res: Some(
                                                DefId(
                                                    8,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "PI",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            3,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        23.140691393,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "(5.43^10)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "power",
                                            ),
                                            res: Some(
                                                DefId(
                                                    30,
                                                ),
                                            ),
                                        },
                                        args: [
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Div,
                                                    lhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "aFloat",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    65,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "aInt",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    64,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "aInt",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            64,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        22284264.052158874,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "(5.43^5.43)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "pow",
                                            ),
                                            res: Some(
                                                DefId(
                                                    25,
                                                ),
                                            ),
                                        },
                                        args: [
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Div,
                                                    lhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "aFloat",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    65,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "aInt",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    64,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Div,
                                                    lhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "aFloat",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    65,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "aInt",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    64,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        9771.541361438,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Ln(e)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "ln",
                                            ),
                                            res: Some(
                                                DefId(
                                                    14,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Call(
                                                FuncCall {
                                                    res_ident: ResIdent {
                                                        ident: Ident(
                                                            "exp",
                                                        ),
                                                        res: Some(
                                                            DefId(
                                                                8,
                                                            ),
                                                        ),
                                                    },
                                                    args: [
                                                        Literal(
                                                            Float(
                                                                1.0,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        1.0,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Log(100,base=10)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "log",
                                            ),
                                            res: Some(
                                                DefId(
                                                    22,
                                                ),
                                            ),
                                        },
                                        args: [
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Mul,
                                                    lhs: BinaryOp(
                                                        BinOpExpr {
                                                            op: Mul,
                                                            lhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "aInt",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            64,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "aInt",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            64,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Literal(
                                                        Float(
                                                            1.0,
                                                        ),
                                                    ),
                                                },
                                            ),
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Mul,
                                                    lhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "aInt",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    64,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Literal(
                                                        Float(
                                                            1.0,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        2.0,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "sin(3/2 PI)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "sin",
                                            ),
                                            res: Some(
                                                DefId(
                                                    35,
                                                ),
                                            ),
                                        },
                                        args: [
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Div,
                                                    lhs: BinaryOp(
                                                        BinOpExpr {
                                                            op: Mul,
                                                            lhs: Literal(
                                                                Int(
                                                                    3,
                                                                ),
                                                            ),
                                                            rhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "PI",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            3,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Literal(
                                                        Int(
                                                            2,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                UnaryMinus(
                                    Literal(
                                        Float(
                                            1.0,
                                        ),
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "cos(3/2 PI)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "cos",
                                            ),
                                            res: Some(
                                                DefId(
                                                    42,
                                                ),
                                            ),
                                        },
                                        args: [
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Div,
                                                    lhs: BinaryOp(
                                                        BinOpExpr {
                                                            op: Mul,
                                                            lhs: Var(
                                                                ResIdent {
                                                                    ident: Ident(
                                                                        "PI",
                                                                    ),
                                                                    res: Some(
                                                                        DefId(
                                                                            3,
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Literal(
                                                                Int(
                                                                    3,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Literal(
                                                        Int(
                                                            2,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        0.0,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "tan(PI/3)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "tan",
                                            ),
                                            res: Some(
                                                DefId(
                                                    44,
                                                ),
                                            ),
                                        },
                                        args: [
                                            BinaryOp(
                                                BinOpExpr {
                                                    op: Div,
                                                    lhs: Var(
                                                        ResIdent {
                                                            ident: Ident(
                                                                "PI",
                                                            ),
                                                            res: Some(
                                                                DefId(
                                                                    3,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Literal(
                                                        Float(
                                                            3.0,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        1.7305080757,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "sqrt(25)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "sqrt",
                                            ),
                                            res: Some(
                                                DefId(
                                                    28,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Literal(
                                                Float(
                                                    25.0,
                                                ),
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Float(
                                        5.0,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "MaxInt",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Var(
                                    ResIdent {
                                        ident: Ident(
                                            "MAX_INT",
                                        ),
                                        res: Some(
                                            DefId(
                                                1,
                                            ),
                                        ),
                                    },
                                ),
                                Literal(
                                    Int(
                                        2147483647,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "float2Int(54.3)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "float2Int",
                                            ),
                                            res: Some(
                                                DefId(
                                                    48,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Var(
                                                ResIdent {
                                                    ident: Ident(
                                                        "aFloat",
                                                    ),
                                                    res: Some(
                                                        DefId(
                                                            65,
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Int(
                                        54,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "14 Modulo 6",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "modulo",
                                            ),
                                            res: Some(
                                                DefId(
                                                    51,
                                                ),
                                            ),
                                        },
                                        args: [
                                            Literal(
                                                Int(
                                                    14,
                                                ),
                                            ),
                                            Literal(
                                                Int(
                                                    6,
                                                ),
                                            ),
                                        ],
                                    },
                                ),
                                Literal(
                                    Int(
                                        2,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "(Pseudo) Random int [0,16383]",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResultsI",
                                ),
                                res: Some(
                                    DefId(
                                        60,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "rand",
                                            ),
                                            res: Some(
                                                DefId(
                                                    54,
                                                ),
                                            ),
                                        },
                                        args: [],
                                    },
                                ),
                                Literal(
                                    Int(
                                        16166,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "-----",
                        ),
                    ),
                    Print(
                        String(
                            "Random float [0,1)",
                        ),
                    ),
                    Call(
                        FuncCall {
                            res_ident: ResIdent {
                                ident: Ident(
                                    "printResults",
                                ),
                                res: Some(
                                    DefId(
                                        57,
                                    ),
                                ),
                            },
                            args: [
                                Call(
                                    FuncCall {
                                        res_ident: ResIdent {
                                            ident: Ident(
                                                "random",
                                            ),
                                            res: Some(
                                                DefId(
                                                    55,
                                                ),
                                            ),
                                        },
                                        args: [],
                                    },
                                ),
                                Literal(
                                    Float(
                                        0.116638,
                                    ),
                                ),
                            ],
                        },
                    ),
                    Print(
                        String(
                            "Done :)",
                        ),
                    ),
                ],
            },
        ),
    ],
}